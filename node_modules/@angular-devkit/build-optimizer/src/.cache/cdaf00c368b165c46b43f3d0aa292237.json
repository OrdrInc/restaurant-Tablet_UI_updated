{"remainingRequest":"/Users/prithvi/Desktop/restaurant-Tablet_UI_updated/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/prithvi/Desktop/restaurant-Tablet_UI_updated/node_modules/rxjs-compat/_esm5/operator/publishReplay.js","dependencies":[{"path":"/Users/prithvi/Desktop/restaurant-Tablet_UI_updated/node_modules/rxjs-compat/_esm5/operator/publishReplay.js","mtime":1591897755347},{"path":"/Users/prithvi/Desktop/restaurant-Tablet_UI_updated/node_modules/cache-loader/dist/cjs.js","mtime":1591897751512},{"path":"/Users/prithvi/Desktop/restaurant-Tablet_UI_updated/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1591897748973}],"contextDependencies":[],"result":["import { publishReplay as higherOrder } from 'rxjs/operators';\n/* tslint:enable:max-line-length */\n/**\n * @param bufferSize\n * @param windowTime\n * @param selectorOrScheduler\n * @param scheduler\n * @return {Observable<T> | ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    return higherOrder(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);\n}\n//# sourceMappingURL=publishReplay.js.map",null]}