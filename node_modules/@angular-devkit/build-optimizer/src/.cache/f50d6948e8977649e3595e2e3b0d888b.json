{"remainingRequest":"/Users/prithvi/Downloads/restaurant-Tablet_UI/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/prithvi/Downloads/restaurant-Tablet_UI/node_modules/rxjs-compat/_esm5/operator/skip.js","dependencies":[{"path":"/Users/prithvi/Downloads/restaurant-Tablet_UI/node_modules/rxjs-compat/_esm5/operator/skip.js","mtime":499162500000},{"path":"/Users/prithvi/Downloads/restaurant-Tablet_UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/prithvi/Downloads/restaurant-Tablet_UI/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { skip as higherOrder } from 'rxjs/operators';\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip(count) {\n    return higherOrder(count)(this);\n}\n//# sourceMappingURL=skip.js.map",null]}