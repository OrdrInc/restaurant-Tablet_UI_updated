{"remainingRequest":"/Users/prithvi/Downloads/pusher/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/prithvi/Downloads/pusher/node_modules/rxjs-compat/_esm5/operator/repeat.js","dependencies":[{"path":"/Users/prithvi/Downloads/pusher/node_modules/rxjs-compat/_esm5/operator/repeat.js","mtime":499162500000},{"path":"/Users/prithvi/Downloads/pusher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/prithvi/Downloads/pusher/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { repeat as higherOrder } from 'rxjs/operators';\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat(count) {\n    if (count === void 0) { count = -1; }\n    return higherOrder(count)(this);\n}\n//# sourceMappingURL=repeat.js.map",null]}