{"remainingRequest":"/Users/prithvi/Downloads/restaurant-Tablet_UI/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/prithvi/Downloads/restaurant-Tablet_UI/node_modules/rxjs-compat/_esm5/operator/ignoreElements.js","dependencies":[{"path":"/Users/prithvi/Downloads/restaurant-Tablet_UI/node_modules/rxjs-compat/_esm5/operator/ignoreElements.js","mtime":499162500000},{"path":"/Users/prithvi/Downloads/restaurant-Tablet_UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/prithvi/Downloads/restaurant-Tablet_UI/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { ignoreElements as higherOrder } from 'rxjs/operators';\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements() {\n    return higherOrder()(this);\n}\n//# sourceMappingURL=ignoreElements.js.map",null]}