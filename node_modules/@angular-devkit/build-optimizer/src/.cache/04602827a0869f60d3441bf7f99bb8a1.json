{"remainingRequest":"C:\\Users\\Public\\restaurant-Tablet_UI_updated\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Public\\restaurant-Tablet_UI_updated\\node_modules\\rxjs-compat\\_esm5\\operator\\publishReplay.js","dependencies":[{"path":"C:\\Users\\Public\\restaurant-Tablet_UI_updated\\node_modules\\rxjs-compat\\_esm5\\operator\\publishReplay.js","mtime":1609273599663},{"path":"C:\\Users\\Public\\restaurant-Tablet_UI_updated\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1609273575432},{"path":"C:\\Users\\Public\\restaurant-Tablet_UI_updated\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1609273553988}],"contextDependencies":[],"result":["import { publishReplay as higherOrder } from 'rxjs/operators';\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * @param bufferSize\r\n * @param windowTime\r\n * @param selectorOrScheduler\r\n * @param scheduler\r\n * @return {Observable<T> | ConnectableObservable<T>}\r\n * @method publishReplay\r\n * @owner Observable\r\n */\r\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\r\n    return higherOrder(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);\r\n}\r\n//# sourceMappingURL=publishReplay.js.map",null]}